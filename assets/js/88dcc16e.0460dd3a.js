"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[695],{6858:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"developers/setup","title":"Setup","description":"Follow the steps below to set up your development environment.","source":"@site/docs/developers/setup.md","sourceDirName":"developers","slug":"/developers/setup","permalink":"/owlistic/docs/developers/setup","draft":false,"unlisted":false,"editUrl":"https://github.com/owlistic-notes/owlistic/tree/main/docs/website/docs/developers/setup.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Repository Structure","permalink":"/owlistic/docs/developers/repo"},"next":{"title":"Contributing","permalink":"/owlistic/docs/category/contributing"}}');var r=t(4848),i=t(8453);const o={},l="Setup",c={},d=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Cloning the Repository",id:"cloning-the-repository",level:2},{value:"Development Workflow",id:"development-workflow",level:2},{value:"Setting Up the Backend",id:"setting-up-the-backend",level:3},{value:"Running the Backend",id:"running-the-backend",level:4},{value:"Setting Up the Frontend",id:"setting-up-the-frontend",level:3},{value:"Running the Frontend",id:"running-the-frontend",level:4},{value:"Making Changes",id:"making-changes",level:2},{value:"Testing Your Changes",id:"testing-your-changes",level:2},{value:"Full Development Environment with Docker Compose",id:"full-development-environment-with-docker-compose",level:2},{value:"Submitting Your Changes",id:"submitting-your-changes",level:2}];function a(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"setup",children:"Setup"})}),"\n",(0,r.jsx)(n.p,{children:"Follow the steps below to set up your development environment."}),"\n",(0,r.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,r.jsx)(n.p,{children:"Before you begin, ensure you have the following installed:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Go"})," (version 1.23 or above) for the backend"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Flutter"})," (latest stable version) for the frontend"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Git"})," (for version control)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Docker"})," and ",(0,r.jsx)(n.strong,{children:"Docker Compose"})," (for local deployment with dependencies)"]}),"\n",(0,r.jsx)(n.li,{children:"A code editor of your choice (e.g., Visual Studio Code)"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"cloning-the-repository",children:"Cloning the Repository"}),"\n",(0,r.jsx)(n.p,{children:"First, clone the repository to your local machine:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"git clone https://github.com/owlistic-notes/owlistic.git\ncd owlistic\n"})}),"\n",(0,r.jsx)(n.h2,{id:"development-workflow",children:"Development Workflow"}),"\n",(0,r.jsx)(n.p,{children:"Owlistic consists of two main components:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Backend"}),": Written in Go"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Frontend"}),": Flutter web application"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"setting-up-the-backend",children:"Setting Up the Backend"}),"\n",(0,r.jsx)(n.p,{children:"Navigate to the backend directory and build the Go application:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"cd src/backend\ngo mod download\ngo build -o build/owlistic cmd/main.go\n"})}),"\n",(0,r.jsx)(n.h4,{id:"running-the-backend",children:"Running the Backend"}),"\n",(0,r.jsx)(n.p,{children:"Before running the backend, ensure PostgreSQL and NATS are available. You can use Docker Compose for this:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# From the project root directory\ndocker-compose up -d postgres nats\n"})}),"\n",(0,r.jsx)(n.p,{children:"Configure environment variables:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"export DB_HOST=localhost\nexport DB_PORT=5432\nexport DB_USER=admin\nexport DB_PASSWORD=admin\nexport DB_NAME=postgres\nexport BROKER_ADDRESS=localhost:9092\n"})}),"\n",(0,r.jsx)(n.p,{children:"Run the backend server:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"cd src/backend\n./build/owlistic\n"})}),"\n",(0,r.jsxs)(n.p,{children:["The backend should now be running on ",(0,r.jsx)(n.code,{children:"http://localhost:8080"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"setting-up-the-frontend",children:"Setting Up the Frontend"}),"\n",(0,r.jsx)(n.p,{children:"Navigate to the Flutter frontend directory:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"cd src/frontend\n"})}),"\n",(0,r.jsx)(n.p,{children:"Install Flutter dependencies:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"flutter pub get\n"})}),"\n",(0,r.jsx)(n.h4,{id:"running-the-frontend",children:"Running the Frontend"}),"\n",(0,r.jsx)(n.p,{children:"Start the Flutter web application in development mode:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"flutter run -d chrome\n"})}),"\n",(0,r.jsx)(n.p,{children:"This will launch the application in Chrome."}),"\n",(0,r.jsx)(n.h2,{id:"making-changes",children:"Making Changes"}),"\n",(0,r.jsx)(n.p,{children:"You can now make changes to the codebase. Here are some guidelines:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Backend (Go): Changes will require recompilation and restarting the server"}),"\n",(0,r.jsx)(n.li,{children:"Frontend (Flutter): Many changes will automatically reload in the browser"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"testing-your-changes",children:"Testing Your Changes"}),"\n",(0,r.jsx)(n.p,{children:"Before submitting your contributions, ensure that all tests pass:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# For backend tests\ncd src/backend\ngo test ./...\n\n# For frontend tests\ncd src/frontend\nflutter test\n"})}),"\n",(0,r.jsx)(n.h2,{id:"full-development-environment-with-docker-compose",children:"Full Development Environment with Docker Compose"}),"\n",(0,r.jsx)(n.p,{children:"For convenience, you can use Docker Compose to run the entire application stack:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"docker-compose up -d\n"})}),"\n",(0,r.jsx)(n.p,{children:"This will start PostgreSQL, NATS, and the Owlistic backend and frontend services."}),"\n",(0,r.jsx)(n.h2,{id:"submitting-your-changes",children:"Submitting Your Changes"}),"\n",(0,r.jsx)(n.p,{children:"Once you are satisfied with your changes, commit them and push to your forked repository:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'git add .\ngit commit -m "Your descriptive commit message"\ngit push origin your-branch-name\n'})}),"\n",(0,r.jsx)(n.p,{children:"Finally, create a pull request to the main repository for review."}),"\n",(0,r.jsx)(n.p,{children:"Thank you for contributing to Owlistic!"})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>l});var s=t(6540);const r={},i=s.createContext(r);function o(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);