"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[614],{1318:(e,t,s)=>{s.d(t,{A:()=>i});const i=s.p+"assets/images/architecture-fd4791d36c0fa85a0b59a34959b0818c.png"},4820:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"developers/architecture","title":"Architecture","description":"Owlistic uses a traditional client-server design, with a dedicated database for data persistence. On top of that, it leverages an event streaming system to push real-time updates to clients. Clients communicate with server over HTTP using REST APIs and listen over a websocket connection for server events. Below is a high level diagram of the architecture.","source":"@site/docs/developers/architecture.md","sourceDirName":"developers","slug":"/developers/architecture","permalink":"/owlistic/docs/developers/architecture","draft":false,"unlisted":false,"editUrl":"https://github.com/owlistic-notes/owlistic/tree/main/docs/website/docs/developers/architecture.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Developers","permalink":"/owlistic/docs/category/developers"},"next":{"title":"Server","permalink":"/owlistic/docs/developers/backend"}}');var r=s(4848),n=s(8453);const o={sidebar_position:1},a="Architecture",c={},l=[{value:"High Level Design",id:"high-level-design",level:2},{value:"Technology Stack",id:"technology-stack",level:2},{value:"Server",id:"server",level:3},{value:"Client (Web/Mobile/Desktop App)",id:"client-webmobiledesktop-app",level:3}];function d(e){const t={a:"a",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",p:"p",...(0,n.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"architecture",children:"Architecture"})}),"\n",(0,r.jsx)(t.p,{children:"Owlistic uses a traditional client-server design, with a dedicated database for data persistence. On top of that, it leverages an event streaming system to push real-time updates to clients. Clients communicate with server over HTTP using REST APIs and listen over a websocket connection for server events. Below is a high level diagram of the architecture."}),"\n",(0,r.jsx)(t.h2,{id:"high-level-design",children:"High Level Design"}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"Architecture",src:s(1318).A+"",width:"1594",height:"700"})}),"\n",(0,r.jsx)(t.p,{children:"The diagram shows clients communicating with the server REST APIs for CRUD (Create, Read, Update, Delete) operations and listening to server events over a websocket connection."}),"\n",(0,r.jsx)(t.p,{children:"The server exposes a gateway layer for REST APIs and a websocket connection. The API gateway is responsible for routing requests to the appropriate service, while the WebSocket gateway is responsible for and handling events."}),"\n",(0,r.jsx)(t.p,{children:"Under the hood, the server communicates with downstream systems (i.e. Postgres, NATS) through data models, both for data persistence and event streaming."}),"\n",(0,r.jsx)(t.h2,{id:"technology-stack",children:"Technology Stack"}),"\n",(0,r.jsx)(t.h3,{id:"server",children:"Server"}),"\n",(0,r.jsx)("img",{src:"https://cdn.simpleicons.org/go",height:"40",alt:"go logo"}),"\n",(0,r.jsx)("img",{width:"12"}),"\n",(0,r.jsx)("img",{src:"https://cdn.simpleicons.org/postgresql",height:"40",alt:"postgresql logo"}),"\n",(0,r.jsx)("img",{width:"12"}),"\n",(0,r.jsx)("img",{src:"https://cdn.simpleicons.org/natsdotio",height:"40",alt:"nats logo"}),"\n",(0,r.jsx)("img",{width:"12"}),"\n",(0,r.jsx)(t.p,{children:"Owlistic server is built using Go, a statically typed, compiled language. The main reason for choosing Go is its strong support for concurrency and efficient memory management, which are crucial for event-driven systems. It also uses the PostgreSQL database for data persistence and NATS as an event streaming system to push real-time updates to clients."}),"\n",(0,r.jsxs)(t.p,{children:["Please refer to the ",(0,r.jsx)(t.a,{href:"/owlistic/docs/developers/backend",children:"Server"})," section for more details."]}),"\n",(0,r.jsx)(t.h3,{id:"client-webmobiledesktop-app",children:"Client (Web/Mobile/Desktop App)"}),"\n",(0,r.jsx)("img",{src:"https://cdn.simpleicons.org/flutter",height:"40",alt:"flutter logo"}),"\n",(0,r.jsx)("img",{width:"12"}),"\n",(0,r.jsx)("img",{src:"https://cdn.simpleicons.org/dart",height:"40",alt:"dart logo"}),"\n",(0,r.jsx)("img",{width:"12"}),"\n",(0,r.jsx)(t.p,{children:"Owlistic client is built using Flutter, a popular open-source framework for building cross-platform applications. The client provides a user-friendly interface to interact with the server and access the features of Owlistic. The main reason for choosing Flutter is its ease of use and ability to create cross-platforms mobile apps using the same codebase with minimal code changes."}),"\n",(0,r.jsxs)(t.p,{children:["Please refer to the ",(0,r.jsx)(t.a,{href:"/owlistic/docs/developers/frontend",children:"App"})," section for more details."]})]})}function h(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,t,s)=>{s.d(t,{R:()=>o,x:()=>a});var i=s(6540);const r={},n=i.createContext(r);function o(e){const t=i.useContext(n);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(n.Provider,{value:t},e.children)}}}]);