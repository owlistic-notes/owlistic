"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[962],{5733:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"installation/docker","title":"Docker Installation","description":"Prerequisites","source":"@site/docs/installation/docker.md","sourceDirName":"installation","slug":"/installation/docker","permalink":"/owlistic/docs/installation/docker","draft":false,"unlisted":false,"editUrl":"https://github.com/owlistic-notes/owlistic/tree/main/docs/website/docs/installation/docker.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"Docker Compose Installation (Recommended)","permalink":"/owlistic/docs/installation/docker-compose"},"next":{"title":"Binary Installation","permalink":"/owlistic/docs/installation/binary"}}');var t=s(4848),o=s(8453);const a={sidebar_position:4},r="Docker Installation",l={},c=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Steps",id:"steps",level:2},{value:"Step 1: Set up PostgreSQL and Kafka containers in Docker (if not already running)",id:"step-1-set-up-postgresql-and-kafka-containers-in-docker-if-not-already-running",level:3},{value:"Step 2.1 Using Pre-built Images",id:"step-21-using-pre-built-images",level:3},{value:"Step 2.2: Building from Source",id:"step-22-building-from-source",level:3},{value:"Post-Installation",id:"post-installation",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"docker-installation",children:"Docker Installation"})}),"\n",(0,t.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,t.jsx)(n.p,{children:"Before installation, ensure you have:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Read the ",(0,t.jsx)(n.a,{href:"/owlistic/docs/installation/system-requirements",children:"System Requirements"})]}),"\n",(0,t.jsx)(n.li,{children:"Docker installed on your system"}),"\n",(0,t.jsx)(n.li,{children:"Set up PostgreSQL and Kafka (either in docker or on your local machine)"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"steps",children:"Steps"}),"\n",(0,t.jsx)(n.h3,{id:"step-1-set-up-postgresql-and-kafka-containers-in-docker-if-not-already-running",children:"Step 1: Set up PostgreSQL and Kafka containers in Docker (if not already running)"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'version: \'3.8\'\n\nservices:\n  postgres:\n    image: postgres:15\n    environment:\n      POSTGRES_USER: admin\n      POSTGRES_PASSWORD: admin\n    ports:\n      - "5432:5432"\n    volumes:\n      - postgres_data:/var/lib/postgresql/data\n\n  kafka:\n    image: bitnami/kafka:3\n    environment:\n      KAFKA_BROKER_ID: 1\n      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181\n      ALLOW_PLAINTEXT_LISTENER: yes\n      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092\n      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092\n      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT\n    ports:\n      - "9092:9092"\n    depends_on:\n      - zookeeper\n\n  zookeeper:\n    image: bitnami/zookeeper:3\n    environment:\n      ALLOW_ANONYMOUS_LOGIN: yes\n    ports:\n      - "2181:2181"\n\nvolumes:\n  postgres_data:\n'})}),"\n",(0,t.jsx)(n.h3,{id:"step-21-using-pre-built-images",children:"Step 2.1 Using Pre-built Images"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Pull the backend image\ndocker pull ghcr.io/owlistic-notes/owlistic:latest\n\n# Pull the frontend image\ndocker pull ghcr.io/owlistic-notes/owlistic-app:latest\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Run the backend\ndocker run -d \\\n  --name owlistic \\\n  -p 8080:8080 \\\n  -e APP_PORT=8080 \\\n  -e DB_HOST=postgres \\\n  -e DB_PORT=5432 \\\n  -e DB_USER=admin \\\n  -e DB_PASSWORD=admin \\\n  -e DB_NAME=postgres \\\n  -e KAFKA_BROKER=kafka:9092 \\\n  ghcr.io/owlistic-notes/owlistic:latest\n\n# Run the frontend\ndocker run -d \\\n  --name owlistic-app \\\n  -p 80:80 \\\n  ghcr.io/owlistic-notes/owlistic-app:latest\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Note: The above commands assume you have PostgreSQL and Kafka running and accessible respectively at ",(0,t.jsx)(n.code,{children:"postgres:5432"})," and ",(0,t.jsx)(n.code,{children:"kafka:9092"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"step-22-building-from-source",children:"Step 2.2: Building from Source"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"\n# Build the backend image\ndocker build -t owlistic:latest .\n\n# Build the frontend image\ndocker build -t owlistic-app:latest .\n\n# Run the backend container\ndocker run -d \\\n  --name owlistic \\\n  -p 8080:8080 \\\n  -e APP_PORT=8080 \\\n  -e DB_HOST=postgres \\\n  -e DB_PORT=5432 \\\n  -e DB_NAME=owlistic \\\n  -e DB_USER=admin \\\n  -e DB_PASSWORD=admin \\\n  -e KAFKA_BROKER=kafka:9092 \\\n  owlistic\n\n# Run the frontend container\ndocker run -d \\\n  --name owlistic-app \\\n  -p 80:80 \\\n  owlistic-app\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Note: The above commands assume you have PostgreSQL and Kafka running and accessible respectively at ",(0,t.jsx)(n.code,{children:"postgres:5432"})," and ",(0,t.jsx)(n.code,{children:"kafka:9092"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"post-installation",children:"Post-Installation"}),"\n",(0,t.jsx)(n.p,{children:"After installation:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"The backend should be running on port 8080"}),"\n",(0,t.jsx)(n.li,{children:"The frontend should be accessible on port 80"}),"\n",(0,t.jsxs)(n.li,{children:["Visit ",(0,t.jsx)(n.code,{children:"http://your-server"})," to access the web interface"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,t.jsxs)(n.p,{children:["If you encounter any issues during installation, please refer to the ",(0,t.jsx)(n.a,{href:"/owlistic/docs/troubleshooting/common-issues",children:"Troubleshooting"})," section for assistance."]})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>r});var i=s(6540);const t={},o=i.createContext(t);function a(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);