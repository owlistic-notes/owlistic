"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[924],{4575:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>r,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"getting-started/installation","title":"Installation","description":"Owlistic is a Go-based application that can be deployed in several ways. Choose the method that best suits your environment and requirements.","source":"@site/docs/getting-started/installation.md","sourceDirName":"getting-started","slug":"/getting-started/installation","permalink":"/owlistic/docs/getting-started/installation","draft":false,"unlisted":false,"editUrl":"https://github.com/owlistic-notes/owlistic/tree/main/docs/website/docs/getting-started/installation.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"Requirements","permalink":"/owlistic/docs/getting-started/system-requirements"},"next":{"title":"Usage","permalink":"/owlistic/docs/category/usage"}}');var s=i(4848),l=i(8453);const a={sidebar_position:4},o="Installation",r={},d=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Binary Installation",id:"binary-installation",level:2},{value:"Step 1: Download the Binary",id:"step-1-download-the-binary",level:3},{value:"Step 2: Configure Environment Variables",id:"step-2-configure-environment-variables",level:3},{value:"Step 3: Run the Application",id:"step-3-run-the-application",level:3},{value:"Docker Installation",id:"docker-installation",level:2},{value:"Using Pre-built Images",id:"using-pre-built-images",level:3},{value:"Docker Compose Installation (Recommended)",id:"docker-compose-installation-recommended",level:2},{value:"Step 1: Create Docker Compose File",id:"step-1-create-docker-compose-file",level:3},{value:"Step 2: Start the Services",id:"step-2-start-the-services",level:3},{value:"Kubernetes/Helm Installation",id:"kuberneteshelm-installation",level:2},{value:"Step 1: Add the Owlistic Helm Repository",id:"step-1-add-the-owlistic-helm-repository",level:3},{value:"Step 2: Install Using Helm",id:"step-2-install-using-helm",level:3},{value:"Step 3: Verify the Installation",id:"step-3-verify-the-installation",level:3},{value:"Building from Source",id:"building-from-source",level:2},{value:"Building the backend server",id:"building-the-backend-server",level:3},{value:"Building the Flutter Web UI",id:"building-the-flutter-web-ui",level:3},{value:"Deploying the Web UI",id:"deploying-the-web-ui",level:4},{value:"Post-Installation",id:"post-installation",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"installation",children:"Installation"})}),"\n",(0,s.jsx)(n.p,{children:"Owlistic is a Go-based application that can be deployed in several ways. Choose the method that best suits your environment and requirements."}),"\n",(0,s.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,s.jsx)(n.p,{children:"Before installation, ensure you have:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Read the ",(0,s.jsx)(n.a,{href:"/owlistic/docs/getting-started/system-requirements",children:"System Requirements"})]}),"\n",(0,s.jsx)(n.li,{children:"Set up PostgreSQL and Kafka (required for storage and real-time synchronization)"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"binary-installation",children:"Binary Installation"}),"\n",(0,s.jsx)(n.h3,{id:"step-1-download-the-binary",children:"Step 1: Download the Binary"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# For Linux (amd64)\ncurl -LO https://github.com/owlistic-notes/owlistic/releases/latest/download/owlistic\n# Make owlistic executable\nchmod +x owlistic\n\ncurl -L https://github.com/owlistic-notes/owlistic/releases/latest/download/owlistic-ui.zip -o owlistic-ui.zip\n# Extract the UI files\nunzip owlistic-ui.zip -d owlistic-ui\n"})}),"\n",(0,s.jsx)(n.h3,{id:"step-2-configure-environment-variables",children:"Step 2: Configure Environment Variables"}),"\n",(0,s.jsx)(n.p,{children:"Set the required environment variables:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"export DB_HOST=localhost\nexport DB_PORT=5432\nexport DB_USER=admin\nexport DB_PASSWORD=admin\nexport DB_NAME=postgres\nexport KAFKA_BROKER=localhost:9092\n"})}),"\n",(0,s.jsx)(n.h3,{id:"step-3-run-the-application",children:"Step 3: Run the Application"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Start the backend application\n./owlistic\n\n# Serve the UI using a simple HTTP server\ncd owlistic-ui\npython3 -m http.server 80\n"})}),"\n",(0,s.jsx)(n.h2,{id:"docker-installation",children:"Docker Installation"}),"\n",(0,s.jsx)(n.h3,{id:"using-pre-built-images",children:"Using Pre-built Images"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Pull the backend image\ndocker pull daviderutigliano/owlistic:latest\n\n# Pull the frontend image\ndocker pull daviderutigliano/owlistic-ui:latest\n\n# Run the backend\ndocker run -d \\\n  --name owlistic \\\n  -p 8080:8080 \\\n  -e APP_PORT=8080 \\\n  -e DB_PORT=5432 \\\n  -e DB_USER=admin \\\n  -e DB_PASSWORD=admin \\\n  -e DB_NAME=postgres \\\n  -e KAFKA_BROKER=kafka:9092 \\\n  daviderutigliano/owlistic:latest\n\n# Run the frontend\ndocker run -d \\\n  --name owlistic-ui \\\n  -p 80:80 \\\n  daviderutigliano/owlistic-ui:latest\n"})}),"\n",(0,s.jsx)(n.p,{children:"Note: The above commands assume you have PostgreSQL and Kafka running and accessible."}),"\n",(0,s.jsx)(n.h2,{id:"docker-compose-installation-recommended",children:"Docker Compose Installation (Recommended)"}),"\n",(0,s.jsx)(n.h3,{id:"step-1-create-docker-compose-file",children:"Step 1: Create Docker Compose File"}),"\n",(0,s.jsxs)(n.p,{children:["Create a file named ",(0,s.jsx)(n.code,{children:"docker-compose.yml"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'version: \'3.8\'\n\nservices:\n  owlistic:\n    image: daviderutigliano/owlistic:latest\n    ports:\n      - "8080:8080"\n    depends_on:\n      - postgres\n      - kafka\n    environment:\n      - APP_PORT=8080\n      - DB_HOST=postgres\n      - DB_PORT=5432\n      - DB_USER=admin\n      - DB_PASSWORD=admin\n      - DB_NAME=postgres\n      - KAFKA_BROKER=kafka:9092\n  owlistic-ui:\n    image: daviderutigliano/owlistic-ui:latest\n    ports:\n      - "80:80"\n    depends_on:\n      - owlistic\n  postgres:\n    image: postgres:15\n    environment:\n      POSTGRES_USER: admin\n      POSTGRES_PASSWORD: admin\n    ports:\n      - "5432:5432"\n    volumes:\n      - postgres_data:/var/lib/postgresql/data\n  kafka:\n    image: bitnami/kafka:3\n    environment:\n      KAFKA_BROKER_ID: 1\n      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181\n      ALLOW_PLAINTEXT_LISTENER: yes\n      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092\n      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092\n      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT\n    ports:\n      - "9092:9092"\n    depends_on:\n      - zookeeper\n\n  zookeeper:\n    image: bitnami/zookeeper:3\n    environment:\n      ALLOW_ANONYMOUS_LOGIN: yes\n    ports:\n      - "2181:2181"\n\nvolumes:\n  postgres_data:\n'})}),"\n",(0,s.jsx)(n.h3,{id:"step-2-start-the-services",children:"Step 2: Start the Services"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"docker-compose up -d\n"})}),"\n",(0,s.jsx)(n.h2,{id:"kuberneteshelm-installation",children:"Kubernetes/Helm Installation"}),"\n",(0,s.jsx)(n.h3,{id:"step-1-add-the-owlistic-helm-repository",children:"Step 1: Add the Owlistic Helm Repository"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"helm repo add owlistic https://owlistic-notes.github.io/helm-charts\nhelm repo update\n"})}),"\n",(0,s.jsx)(n.h3,{id:"step-2-install-using-helm",children:"Step 2: Install Using Helm"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Create a values file (values.yaml) for your configuration\nhelm install owlistic owlistic/owlistic -f values.yaml\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Example ",(0,s.jsx)(n.code,{children:"values.yaml"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"replicaCount: 2\n\nbackend:\n  image:\n    repository: daviderutigliano/owlistic\n    tag: main-arm64\n    pullPolicy: Always\n\nfrontend:\n  image:\n    repository: daviderutigliano/owlistic-ui\n    tag: main-arm64\n    pullPolicy: Always\n\nservice:\n  backend:\n    type: ClusterIP\n    port: 8080\n  frontend:\n    type: ClusterIP\n    port: 80\n\nenvironment:\n  APP_PORT: 8080\n  DB_HOST: postgres-service\n  DB_PORT: 5432\n  DB_USER: admin\n  DB_PASSWORD: admin\n  DB_NAME: postgres\n  KAFKA_BROKER: kafka-service:9092\n\nresources:\n  limits:\n    cpu: 1000m\n    memory: 1Gi\n  requests:\n    cpu: 500m\n    memory: 512Mi\n"})}),"\n",(0,s.jsx)(n.h3,{id:"step-3-verify-the-installation",children:"Step 3: Verify the Installation"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"kubectl get pods -l app.kubernetes.io/name=owlistic\nkubectl get services -l app.kubernetes.io/name=owlistic\n"})}),"\n",(0,s.jsx)(n.h2,{id:"building-from-source",children:"Building from Source"}),"\n",(0,s.jsx)(n.p,{children:"If you prefer to build from source:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Clone the repository\ngit clone https://github.com/owlistic-notes/owlistic.git\ncd owlistic\n"})}),"\n",(0,s.jsx)(n.h3,{id:"building-the-backend-server",children:"Building the backend server"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"# Build the backend\ncd src/backend\ngo build -o owlistic cmd/main.go\n"})}),"\n",(0,s.jsx)(n.h3,{id:"building-the-flutter-web-ui",children:"Building the Flutter Web UI"}),"\n",(0,s.jsx)(n.p,{children:"To build the frontend Flutter web application:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Navigate to the frontend directory\ncd src/frontend\n\n# Ensure Flutter dependencies are installed\nflutter pub get\n\n# Build the web release\nflutter build web --release\n"})}),"\n",(0,s.jsxs)(n.p,{children:["This will generate the web artifacts in the ",(0,s.jsx)(n.code,{children:"build/web"})," directory, which can be deployed to any web server."]}),"\n",(0,s.jsx)(n.h4,{id:"deploying-the-web-ui",children:"Deploying the Web UI"}),"\n",(0,s.jsx)(n.p,{children:"You can deploy the Flutter web build by hosting it locally or using a basic web server:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Navigate to the build directory\ncd build/web\n\n# Serve using Python's built-in HTTP server (for testing)\npython3 -m http.server 8000\n"})}),"\n",(0,s.jsx)(n.h2,{id:"post-installation",children:"Post-Installation"}),"\n",(0,s.jsx)(n.p,{children:"After installation:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"The backend should be running on port 8080"}),"\n",(0,s.jsx)(n.li,{children:"The frontend should be accessible on port 80"}),"\n",(0,s.jsxs)(n.li,{children:["Visit ",(0,s.jsx)(n.code,{children:"http://your-server"})," to access the web interface"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,s.jsxs)(n.p,{children:["If you encounter any issues during installation, please refer to the ",(0,s.jsx)(n.a,{href:"/owlistic/docs/troubleshooting/common-issues",children:"Troubleshooting"})," section for assistance."]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>o});var t=i(6540);const s={},l=t.createContext(s);function a(e){const n=t.useContext(l);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),t.createElement(l.Provider,{value:n},e.children)}}}]);