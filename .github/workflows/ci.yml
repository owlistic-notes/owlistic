name: Run CI for Dev

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths-ignore:
      - "docs/**"

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  path-filter:
    name: Path Filter
    runs-on: ubuntu-latest
    outputs:
      backend: ${{ steps.filter.outputs.backend }}
      frontend: ${{ steps.filter.outputs.frontend }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Filter paths
        id: filter
        uses: dorny/paths-filter@v2
        with:
          filters: |
            backend:
              - 'src/backend/**'
            frontend:
              - 'src/frontend/**'

  server-binary:
    name: Server binary Package and Archive
    runs-on: ubuntu-latest
    needs: path-filter
    if: ${{ needs.path-filter.outputs.backend == 'true' || github.event_name == 'workflow_dispatch' }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.24"

      - name: Build Golang Binary
        run: |
          cd src/backend
          go build -o owlistic ./cmd/main.go

      - name: Archive Go Binary
        uses: actions/upload-artifact@v4
        with:
          name: Server Binary
          path: src/backend/owlistic
          retention-days: 7
          if-no-files-found: error

  server-docker:
    name: Server Docker Build and Push (${{ matrix.platform }})
    runs-on: ubuntu-latest
    needs: [path-filter, server-binary]
    if: ${{ needs.path-filter.outputs.backend == 'true' || github.event_name == 'workflow_dispatch' }}
    strategy:
      matrix:
        platform: [arm64, amd64]
        include:
          - platform: arm64
            suffix: ""
          - platform: amd64
            suffix: "-amd64"
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=sha,format=short,prefix=,suffix=${{ matrix.suffix }}

      - name: Build Backend Docker Image
        uses: docker/build-push-action@v5
        with:
          push: false
          context: src/backend
          platforms: linux/${{ matrix.platform }}
          file: src/backend/Dockerfile
          build-args: |
            TARGETARCH=${{ matrix.platform }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  frontend-package:
    name: Frontend Package and Archive
    runs-on: ubuntu-latest
    needs: path-filter
    if: ${{ needs.path-filter.outputs.frontend == 'true' || github.event_name == 'workflow_dispatch' }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: Install Flutter Dependencies
        run: |
          cd src/frontend
          flutter pub get

      - name: Build Client Apps
        run: |
          cd src/frontend
          flutter config --enable-web
          flutter pub get
          flutter create --platforms=web .
          flutter build web --release
          
      - name: Archive Web App
        uses: actions/upload-artifact@v4
        with:
          name: Web App
          path: src/frontend/build/web
          retention-days: 7
          if-no-files-found: error

  frontend-docker:
    name: Frontend Docker Build and Push (${{ matrix.platform }})
    runs-on: ubuntu-latest
    needs: [path-filter, frontend-package]
    if: ${{ needs.path-filter.outputs.frontend == 'true' || github.event_name == 'workflow_dispatch' }}
    strategy:
      matrix:
        platform: [arm64, amd64]
        include:
          - platform: arm64
            suffix: ""
          - platform: amd64
            suffix: "-amd64"
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}-app
          tags: |
            type=sha,format=short,prefix=,suffix=${{ matrix.suffix }}

      - name: Build Frontend Docker Image
        uses: docker/build-push-action@v5
        with:
          push: false
          context: src/frontend
          platforms: linux/${{ matrix.platform }}
          file: src/frontend/Dockerfile
          build-args: |
            TARGETARCH=${{ matrix.platform }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
